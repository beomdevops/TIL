"""
완탐을 돌릴까 하다가 제한사항에 숫자 N: 1 이상 10억 이하의 자연수를 보자마자 생각을 접고 풀이를 생각해 보았다.. 확 떠오르지가 않았다.. 힌트를 보고 구글링을 하고나서 이해할 수 있었다.. 오늘도 느끼지만 우선 손으로 먼저 규칙으 찾는게 가장 좋은 것 같다..
문제는 0 -> N으로 갈때 갈 수 있는 최소 비용의 경우의 수를 구하는 것과 N -> 0로 가는 것과 같은 의미이다. 순간이동은 비용이 들지 않으나 점프는 비용이 발생한다. 최소한의 점프를 통해 도착야한다. 문제를 잘 보면 순간이동은 x2이다 이것을 잘 생각해보면 목적지까지 가기위해서 순간이동은 짝수에서만 가능하다. ex) 5인 경우 5는 홀 수 이므로 한칸 점하여 4로 이동하고 4에서 순간이동으로 2로 이동한다. 2에서 순간이동으로 1로 이동하고 1에서 0으로 1칸 점프하면 정답이 된다..  
"""
def solution(n):
    ans = 0
    cnt = 0
    while n== cnt:
        if n%2 == 0: ## 순간이동
            n = n//2
        else: ## 점프
            n-=1
            ans+=1
    return ans
    